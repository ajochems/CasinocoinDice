package org.casinocoin.dice.model;

import java.sql.Timestamp;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 25 15:14:30 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SecretsViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_SECRETS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        SecretHash,
        ValidFrom,
        ValidTo;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int SECRETHASH = AttributesEnum.SecretHash.index();
    public static final int VALIDFROM = AttributesEnum.ValidFrom.index();
    public static final int VALIDTO = AttributesEnum.ValidTo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SecretsViewRowImpl() {
    }

    /**
     * Gets Secrets entity object.
     * @return the Secrets
     */
    public EntityImpl getSecrets() {
        return (EntityImpl) getEntity(ENTITY_SECRETS);
    }

    /**
     * Gets the attribute value for id using the alias name Id.
     * @return the id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for id using the alias name Id.
     * @param value value to set the id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for secret_hash using the alias name SecretHash.
     * @return the secret_hash
     */
    public String getSecretHash() {
        return (String) getAttributeInternal(SECRETHASH);
    }

    /**
     * Sets <code>value</code> as attribute value for secret_hash using the alias name SecretHash.
     * @param value value to set the secret_hash
     */
    public void setSecretHash(String value) {
        setAttributeInternal(SECRETHASH, value);
    }

    /**
     * Gets the attribute value for valid_from using the alias name ValidFrom.
     * @return the valid_from
     */
    public Timestamp getValidFrom() {
        return (Timestamp) getAttributeInternal(VALIDFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for valid_from using the alias name ValidFrom.
     * @param value value to set the valid_from
     */
    public void setValidFrom(Timestamp value) {
        setAttributeInternal(VALIDFROM, value);
    }

    /**
     * Gets the attribute value for valid_to using the alias name ValidTo.
     * @return the valid_to
     */
    public Timestamp getValidTo() {
        return (Timestamp) getAttributeInternal(VALIDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for valid_to using the alias name ValidTo.
     * @param value value to set the valid_to
     */
    public void setValidTo(Timestamp value) {
        setAttributeInternal(VALIDTO, value);
    }
}

